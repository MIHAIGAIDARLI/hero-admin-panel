{"version":3,"sources":["api/apiSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getHeroes","query","providesTags","createHero","mutation","hero","url","method","body","invalidatesTags","deleteHero","id","useGetHeroesQuery","useCreateHeroMutation","useDeleteHeroMutation","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","type","aria-label","onClick","Spinner","role","HeroesList","data","heroes","isLoading","isError","activeFilter","useSelector","state","filters","filteredHeroes","useMemo","slice","filter","item","useCallback","arr","elements","length","map","props","useHttp","request","headers","fetch","response","ok","Error","status","json","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","a","heroesSlice","createSlice","reducers","heroCreated","action","addOne","payload","heroDeleted","removeOne","extraReducers","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","filtersAdapter","createSelector","heroesFetching","heroesFetched","heroesFetchingError","filtersLoadingStatus","fetchFilters","filtersSlice","filtersChanged","filtersFetching","filtersFetched","filtersFetchingError","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","getState","onSubmit","e","preventDefault","newHero","uuidv4","unwrap","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","HeroesFilters","dispatch","useDispatch","useEffect","btnClass","classNames","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEaA,EAAWC,YAAU,CAC9BC,YAAa,MACbC,UAAWC,YAAe,CAACC,QAAS,0BACpCC,SAAU,CAAC,UACXC,UAAW,SAAAC,GAAO,MAAK,CACnBC,UAAWD,EAAQE,MAAM,CACrBA,MAAO,iBAAM,UACbC,aAAc,CAAC,YAEnBC,WAAYJ,EAAQK,SAAS,CACzBH,MAAO,SAAAI,GAAI,MAAK,CACZC,IAAK,UACLC,OAAQ,OACRC,KAAMH,IAEVI,gBAAiB,CAAC,YAEtBC,WAAYX,EAAQK,SAAS,CACzBH,MAAO,SAAAU,GAAE,MAAK,CACVL,IAAI,WAAD,OAAaK,GAChBJ,OAAQ,WAEZE,gBAAiB,CAAC,gBAKhBG,EAAmErB,EAAnEqB,kBAAmBC,EAAgDtB,EAAhDsB,sBAAuBC,EAAyBvB,EAAzBuB,sB,OCWzCC,EAvCQ,SAAH,GAAgD,IAC5DC,EADiBC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAGjD,OAAQD,GACJ,IAAK,OACDH,EAAmB,wBACnB,MACJ,IAAK,QACDA,EAAmB,yBACnB,MACJ,IAAK,OACDA,EAAmB,yBACnB,MACJ,IAAK,QACDA,EAAmB,2BACnB,MACJ,QACIA,EAAmB,yBAG3B,OACI,qBACIK,UAAS,kDAA6CL,GAAmB,UACzE,qBAAKM,IAAI,6EACJD,UAAU,0BACVE,IAAI,eACJC,MAAO,CAAC,UAAa,WAC1B,sBAAKH,UAAU,YAAW,UAEtB,oBAAIA,UAAU,aAAY,SAAEJ,IAC5B,mBAAGI,UAAU,YAAW,SAAEH,OAE9B,sBAAMG,UAAU,wFAAuF,SACnG,wBAAQI,KAAK,SAASJ,UAAU,sBAAsBK,aAAW,QAAQC,QAASP,UCzBnFQ,EARC,WACZ,OACI,qBAAKP,UAAU,8BAA8BQ,KAAK,SAAQ,SACtD,sBAAMR,UAAU,kBAAiB,2BCwE9BS,EAnEI,WAAO,IAAD,EAMjBlB,IAAmB,IAHnBmB,KAAMC,OAAM,MAAG,GAAE,EACjBC,EAAS,EAATA,UACAC,EAAO,EAAPA,QAAO,EAGUpB,IAAdJ,EAAqC,iBAA3B,GAEXyB,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQH,gBAElDI,EAAiBC,mBAAQ,WAC3B,IAAMD,EAAiBP,EAAOS,QAC9B,MAAqB,QAAjBN,EACOI,EAEAA,EAAeG,QAAO,SAAAC,GAAI,OAAIA,EAAKxB,UAAYgB,OAEvD,CAACH,EAAQG,IAeTf,EAAWwB,uBAAY,SAACjC,GAC3BD,EAAWC,KAEZ,IAEH,GAAIsB,EACA,OAAO,cAAC,EAAO,IACZ,GAAIC,EACP,OAAO,oBAAIb,UAAU,mBAAkB,2BAG3C,IAA0BwB,EAcpBC,EAbiB,KADGD,EAcQN,GAbtBQ,OACG,oBAAI1B,UAAU,mBAAkB,2BAIxCwB,EAAIG,KAAI,YAAqB,IAAnBrC,EAAE,EAAFA,GAAOsC,EAAK,sBACzB,OACQ,cAAC,EAAc,2BAAeA,GAAK,IAAE7B,SAAU,kBAAMA,EAAST,MAAxCA,MAOlC,OACI,6BACImC,K,sDCtECI,EAAU,WAsBnB,MAAO,CAACC,QAnBK,uCAAG,WAAO7C,GAAG,2FAA6E,OAA3EC,EAAM,+BAAG,MAAOC,EAAI,+BAAG,KAAM4C,EAAO,+BAAG,CAAC,eAAgB,oBAAmB,kBAKxEC,MAAM/C,EAAK,CAACC,SAAQC,OAAM4C,YAAU,KAAD,EAA5C,IAARE,EAAQ,QAEAC,GAAG,CAAD,qBACN,IAAIC,MAAM,mBAAD,OAAoBlD,EAAG,qBAAagD,EAASG,SAAU,KAAD,mBAGtDH,EAASI,OAAO,KAAD,GAAxB,OAAJ3B,EAAI,yBAEHA,GAAI,uGAKlB,gBAlBY,wCCDX4B,EAAgBC,cAOhBC,EAAeF,EAAcG,gBAAgB,CAC/CC,oBAAqB,SAGZC,EAAcC,YACvB,qBAAoB,sBACnB,8BAAAC,EAAA,sDACiB,OADjB,EACqBhB,IAAXC,EAAO,EAAPA,QAAO,SACDA,EAAQ,gCAAgC,KAAD,+EAItDgB,EAAcC,YAAY,CAC5BnD,KAAM,SACN4C,eACAQ,SAAU,CACFC,YAAa,SAACjC,EAAOkC,GACjBZ,EAAca,OAAOnC,EAAOkC,EAAOE,UAEvCC,YAAa,SAACrC,EAAOkC,GACjBZ,EAAcgB,UAAUtC,EAAOkC,EAAOE,WAG1CG,cAAe,SAAC7E,GACZA,EACK8E,QAAQb,EAAYc,SAAS,SAAAzC,GAAUA,EAAM0B,oBAAsB,aACnEc,QAAQb,EAAYe,WAAW,SAAC1C,EAAOkC,GACpClC,EAAM0B,oBAAsB,OAC5BJ,EAAcqB,OAAO3C,EAAOkC,EAAOE,YAEtCI,QAAQb,EAAYiB,UAAU,SAAA5C,GACvBA,EAAM0B,oBAAsB,WAGnCmB,gBAAe,kBAI7BC,EAAoBhB,EAApBgB,QAEQC,EAFYjB,EAAXiB,QAMTC,EAAa1B,EAAc2B,cAAa,SAAAjD,GAAK,OAAIA,EAAML,UAAvDqD,UCpDDE,GDsDgCC,aAClC,SAACnD,GAAK,OAAKA,EAAMC,QAAQH,eACzBkD,GACA,SAAC3C,EAAQV,GACT,MAAe,QAAXU,EACOV,EAEAA,EAAOU,QAAO,SAAAC,GAAI,OAAIA,EAAKxB,UAAYuB,QAWlDyC,EALAM,eAKAN,EAJAO,cAIAP,EAHAQ,oBAGAR,EAFAb,YAEAa,EADAT,YCvEmBd,eAEjBC,EAAe0B,EAAezB,gBAAgB,CAChD8B,qBAAsB,OACtBzD,aAAc,QAIL0D,EAAe5B,YACxB,uBAAsB,sBACtB,8BAAAC,EAAA,sDACkB,OADlB,EACsBhB,IAAXC,EAAO,EAAPA,QAAO,SACDA,EAAQ,iCAAiC,KAAD,+EAUvD2C,EAAe1B,YAAY,CAC7BnD,KAAM,UACN4C,eACAQ,SAAU,CACN0B,eAAgB,SAAC1D,EAAOkC,GACpBlC,EAAMF,aAAeoC,EAAOE,UAGhCG,cAAe,SAAC7E,GACZA,EACK8E,QAAQgB,EAAaf,SAAS,SAAAzC,GAAUA,EAAMuD,qBAAuB,aACrEf,QAAQgB,EAAad,WAAW,SAAC1C,EAAOkC,GACrClC,EAAMuD,qBAAuB,OAC7BL,EAAeP,OAAO3C,EAAOkC,EAAOE,YAEvCI,QAAQgB,EAAaZ,UAAU,SAAA5C,GACxBA,EAAMuD,qBAAuB,WAGpCV,gBAAe,kBAIzBC,EAAoBW,EAApBX,QACQC,EADYU,EAAXV,QAGFC,EAAaE,EAAeD,cAAa,SAAAjD,GAAK,OAAIA,EAAMC,WAAxD+C,UAKVU,GACAZ,EAJAa,gBAIAb,EAHAc,eAGAd,EAFAe,qBAEAf,EADAY,gBClDEI,EAAmB,WAAH,OAAS,SAACC,GAAI,OAAK,SAAC7B,GACtC,OACW6B,EADW,kBAAX7B,EACK,CACR9C,KAAM8C,GAGFA,MASD8B,EANDC,YAAe,CACzBlB,QAAQ,aAAEpD,SAAQM,WAAU/C,EAASE,YAAcF,EAAS6F,SAC5DmB,WAAY,SAAAC,GAAoB,OAAIA,IAAuBC,OAAON,EAAkB5G,EAASgH,aAC7FG,UAAUC,ICoFCC,EA7FO,WAAO,IAAD,EAEQC,mBAAS,IAAG,mBAArCC,EAAQ,KAAEC,EAAW,OACMF,mBAAS,IAAG,mBAAvCG,EAAS,KAAEC,EAAY,OACQJ,mBAAS,IAAG,mBAA3CK,EAAW,KAAEC,EAAc,OAEAtG,IAAuB,mBAAlDV,EAAU,KAEVyF,GAFsB,KAAT3D,UAEWG,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAnDsD,sBACDtD,EAAU+C,EAAUgB,EAAMe,YAqChC,OACI,uBAAM/F,UAAU,+BAA+BgG,SApC3B,SAACC,GACrBA,EAAEC,iBAEF,IAAMC,EAAU,CACZ7G,GAAI8G,cACJxG,KAAM6F,EACN5F,YAAa8F,EACb7F,QAAS+F,GAGb/G,EAAWqH,GAASE,SAGpBX,EAAY,IACZE,EAAa,IACbE,EAAe,KAqB0D,UACrE,sBAAK9F,UAAU,OAAM,UACjB,uBAAOsG,QAAQ,OAAOtG,UAAU,kBAAiB,kCACjD,uBACIuG,UAAQ,EACRnG,KAAK,OACLR,KAAK,OACLI,UAAU,eACVV,GAAG,OACHkH,YAAY,mBACZC,MAAOhB,EACPiB,SAAU,SAACT,GAAC,OAAKP,EAAYO,EAAEU,OAAOF,aAG9C,sBAAKzG,UAAU,OAAM,UACjB,uBAAOsG,QAAQ,OAAOtG,UAAU,kBAAiB,yBACjD,0BACIuG,UAAQ,EACR3G,KAAK,OACLI,UAAU,eACVV,GAAG,OACHkH,YAAY,iBACZrG,MAAO,CAAC,OAAU,SAClBsG,MAAOd,EACPe,SAAU,SAACT,GAAC,OAAKL,EAAaK,EAAEU,OAAOF,aAG/C,sBAAKzG,UAAU,OAAM,UACjB,uBAAOsG,QAAQ,UAAUtG,UAAU,aAAY,iCAC/C,yBACIuG,UAAQ,EACRvG,UAAU,cACVV,GAAG,UACHM,KAAK,UACL6G,MAAOZ,EACPa,SAAU,SAACT,GAAC,OAAKH,EAAeG,EAAEU,OAAOF,QAAO,UAChD,wBAAQA,MAAM,GAAE,kCAtDV,SAACxF,EAASmB,GAC5B,MAAe,YAAXA,EACO,mDACW,UAAXA,EACA,mDAGPnB,GAAWA,EAAQS,OAAS,EACrBT,EAAQU,KAAI,YAAoB,IAAlB/B,EAAI,EAAJA,KAAMgH,EAAK,EAALA,MAEvB,GAAa,QAAThH,EAEJ,OAAO,wBAAmB6G,MAAO7G,EAAK,SAAEgH,GAApBhH,WAL5B,EAgDaiH,CAAc5F,EAASsD,SAIhC,wBAAQnE,KAAK,SAASJ,UAAU,kBAAiB,wB,iBCjC9C8G,EArDO,WAAO,IAAD,EAEqB/F,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAjEsD,EAAoB,EAApBA,qBAAsBzD,EAAY,EAAZA,aACvBG,EAAU+C,EAAUgB,EAAMe,YAC1BgB,EAAWC,cACVlF,EAAWD,IAAXC,QAOP,GALAmF,qBAAU,WACNF,EAASvC,EAAa1C,MAEvB,IAE0B,YAAzByC,EACA,OAAO,cAAC,EAAO,IACZ,GAA6B,UAAzBA,EACP,OAAO,oBAAIvE,UAAU,mBAAkB,2BAG3C,IAAuBwB,EAqBjBC,EApBiB,KADAD,EAqBQP,GApBnBS,OACG,oBAAI1B,UAAU,mBAAkB,+BAIpCwB,EAAIG,KAAI,YAA+B,IAA7B/B,EAAI,EAAJA,KAAMI,EAAS,EAATA,UAAW4G,EAAK,EAALA,MAExBM,EAAWC,IAAW,MAAOnH,EAAW,CAC1C,OAAUJ,IAASkB,IAGvB,OAAO,wBAEKxB,GAAIM,EACJI,UAAWkH,EACX5G,QAAS,kBAAMyG,EAASrC,EAAe9E,KAAO,SAC5CgH,GAJGhH,MAUzB,OACI,qBAAKI,UAAU,sBAAqB,SAChC,sBAAKA,UAAU,YAAW,UACtB,mBAAGA,UAAU,YAAW,uCACxB,qBAAKA,UAAU,YAAW,SACrByB,UCnCN2F,G,MAfH,WAER,OACI,sBAAMpH,UAAU,MAAK,SACjB,sBAAKA,UAAU,UAAS,UACpB,cAAC,EAAU,IACX,sBAAKA,UAAU,uBAAsB,UACjC,cAAC,EAAa,IACd,cAAC,EAAa,c,MCLlCqH,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,IAAQ,CAACvC,MAAOA,EAAM,SACrB,cAAC,EAAG,QAGRwC,SAASC,eAAe,W","file":"static/js/main.99d2aa40.chunk.js","sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nexport const apiSlice = createApi({\r\n    reducerPath: 'api',\r\n    baseQuery: fetchBaseQuery({baseUrl: 'http://localhost:3001'}),\r\n    tagTypes: ['Heroes'],\r\n    endpoints: builder => ({\r\n        getHeroes: builder.query({\r\n            query: () => 'heroes',\r\n            providesTags: ['Heroes']\r\n        }),\r\n        createHero: builder.mutation({\r\n            query: hero => ({\r\n                url: '/heroes',\r\n                method: 'POST',\r\n                body: hero\r\n            }),\r\n            invalidatesTags: ['Heroes']\r\n        }),\r\n        deleteHero: builder.mutation({\r\n            query: id => ({\r\n                url: `/heroes/${id}`,\r\n                method: 'DELETE'\r\n            }),\r\n            invalidatesTags: ['Heroes']\r\n        })\r\n    })\r\n})\r\n\r\nexport const {useGetHeroesQuery, useCreateHeroMutation, useDeleteHeroMutation} = apiSlice;","\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n    \n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\" onClick={onDelete}></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","\nimport { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { useGetHeroesQuery, useDeleteHeroMutation } from '../../api/apiSlice';\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\n\nconst HeroesList = () => {\n\n    const {\n        data: heroes = [],\n        isLoading,\n        isError,\n    } = useGetHeroesQuery()\n\n    const [deleteHero] = useDeleteHeroMutation()\n\n    const activeFilter = useSelector(state => state.filters.activeFilter)\n\n    const filteredHeroes = useMemo(() => {\n        const filteredHeroes = heroes.slice();\n        if (activeFilter === 'all') {\n            return filteredHeroes;\n        } else {\n            return filteredHeroes.filter(item => item.element === activeFilter)\n            }\n        }, [heroes, activeFilter]);\n\n    //const someState = useSelector(state => ({\n     //   activeFilter: state.filters.activeFilter,\n     //   heroes: state.heroes.heroes\n    //}))\n\n    //const filteredHeroes = useSelector(state => {\n    //    if (state.filters.activeFilter === 'all') {\n    //        return state.heroes.heroes\n    //    } else {\n    //        return state.heroes.heroes.filter(item => item.element === state.filters.activeFilter)\n    //   }\n    //})\n\n     const onDelete = useCallback((id) => {\n        deleteHero(id)\n        // eslint-disable-next-line  \n    }, []);\n\n    if (isLoading) {\n        return <Spinner/>;\n    } else if (isError) {\n        return <h5 className=\"text-center mt-5\">Loading error</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">No heroes yet</h5>\n        }\n\n    \n    return arr.map(({id, ...props}) => {\n        return (\n                <HeroesListItem  key={id} {...props} onDelete={() => onDelete(id)}/>\n        )\n    })\n}\n\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <ul>\n           {elements}\n        </ul>\n    )\n    }\n\nexport default HeroesList;","\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    };\n    return {request}\n}","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst heroesAdapter = createEntityAdapter()\r\n\r\n//const initialState = {\r\n//   heroes: [],\r\n//    heroesLoadingStatus: 'idle',\r\n//}\r\n\r\nconst initialState = heroesAdapter.getInitialState({\r\n    heroesLoadingStatus: 'idle'\r\n})\r\n\r\nexport const fetchHeroes = createAsyncThunk(\r\n    'heroes/fetchHeroes',\r\n     async () => {\r\n        const {request} = useHttp();\r\n        return await request(\"http://localhost:3001/heroes\");\r\n    }\r\n);\r\n\r\nconst heroesSlice = createSlice({\r\n    name: 'heroes',\r\n    initialState,\r\n    reducers: {\r\n            heroCreated: (state, action) => {\r\n                heroesAdapter.addOne(state, action.payload)\r\n                },\r\n            heroDeleted: (state, action) => {\r\n                heroesAdapter.removeOne(state, action.payload)\r\n                }\r\n            },\r\n            extraReducers: (builder) => {\r\n                builder\r\n                    .addCase(fetchHeroes.pending, state => {state.heroesLoadingStatus = 'loading'})\r\n                    .addCase(fetchHeroes.fulfilled, (state, action) => {\r\n                        state.heroesLoadingStatus = 'idle';\r\n                        heroesAdapter.setAll(state, action.payload)\r\n                        })\r\n                    .addCase(fetchHeroes.rejected, state => {\r\n                            state.heroesLoadingStatus = 'error';\r\n                            })\r\n            \r\n                    .addDefaultCase(() => {})\r\n        }\r\n});\r\n\r\nconst {actions, reducer} = heroesSlice;\r\n\r\nexport default reducer;\r\n\r\n\r\n\r\nconst {selectAll} = heroesAdapter.getSelectors(state => state.heroes)\r\n\r\nexport const filteredHeroesSelector = createSelector(\r\n    (state) => state.filters.activeFilter,\r\n    selectAll,\r\n    (filter, heroes) => {\r\n    if (filter === 'all') {\r\n        return heroes\r\n    } else {\r\n        return heroes.filter(item => item.element === filter)\r\n        }\r\n    }\r\n);\r\n\r\nexport const {\r\n    heroesFetching,\r\n    heroesFetched,\r\n    heroesFetchingError,\r\n    heroCreated,\r\n    heroDeleted\r\n} = actions\r\n\r\n\r\n\r\n\r\n","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nconst filtersAdapter = createEntityAdapter()\r\n\r\nconst initialState = filtersAdapter.getInitialState({\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n\r\n})\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'filters/fetchFilters',\r\n    async () => {\r\n        const {request} = useHttp();\r\n        return await request('http://localhost:3001/filters');\r\n    }\r\n)\r\n\r\n//const initialState = {\r\n  //  filters: [],\r\n //   filtersLoadingStatus: 'idle',\r\n //   activeFilter: 'all',\r\n//}\r\n\r\nconst filtersSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        filtersChanged: (state, action) => {\r\n            state.activeFilter = action.payload\r\n        }\r\n    },\r\n        extraReducers: (builder) => {\r\n            builder\r\n                .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'})\r\n                .addCase(fetchFilters.fulfilled, (state, action) => {\r\n                    state.filtersLoadingStatus = 'idle';\r\n                    filtersAdapter.setAll(state, action.payload)\r\n                    })\r\n                .addCase(fetchFilters.rejected, state => {\r\n                        state.filtersLoadingStatus = 'error';\r\n                        })\r\n        \r\n                .addDefaultCase(() => {})\r\n        }\r\n});\r\n\r\nconst {actions, reducer} = filtersSlice;\r\nexport default reducer\r\n\r\nexport const {selectAll} = filtersAdapter.getSelectors(state => state.filters)\r\nexport const {\r\n    filtersFetching,\r\n    filtersFetched,\r\n    filtersFetchingError,\r\n    filtersChanged\r\n} = actions","import { configureStore } from \"@reduxjs/toolkit\";\nimport heroes from '../components/heroesList/heroesSlice';\nimport filters from '../components/heroesFilters/filtersSlice';\nimport { apiSlice } from \"../api/apiSlice\";\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n};\n\nconst store = configureStore({\n    reducer: {heroes, filters, [apiSlice.reducerPath]: apiSlice.reducer},\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware, apiSlice.middleware),\n    devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport default store;","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport store from '../../store';\n\nimport { selectAll } from '../heroesFilters/filtersSlice';\nimport { useCreateHeroMutation } from '../../api/apiSlice';\n\nconst HeroesAddForm = () => {\n    \n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const [createHero, {isLoading}] = useCreateHeroMutation()\n\n    const {filtersLoadingStatus} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState())\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        \n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        createHero(newHero).unwrap()\n\n        \n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Loading Items</option>\n        } else if (status === \"error\") {\n            return <option>Loading error</option>\n        }\n        \n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // eslint-disable-next-line\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Name of the new hero</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"What is my name?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Description</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"What can I do?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Select hero element</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option value=\"\">I own the element...</option>\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","\nimport {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport store from '../../store';\n\nimport { fetchFilters, filtersChanged, selectAll } from './filtersSlice';\nimport Spinner from '../spinner/Spinner';\n\nconst HeroesFilters = () => {\n\n    const {filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState())\n    const dispatch = useDispatch()\n    const {request} = useHttp()\n\n    useEffect(() => {\n        dispatch(fetchFilters(request))\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Loading error</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Filters not found</h5>\n        }\n\n\n        return arr.map(({name, className, label}) => {\n\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n            \n            return <button \n                        key={name} \n                        id={name} \n                        className={btnClass}\n                        onClick={() => dispatch(filtersChanged(name))}\n                        >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Filter heroes by elements</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}